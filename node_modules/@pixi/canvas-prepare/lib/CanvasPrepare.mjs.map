{"version":3,"file":"CanvasPrepare.mjs","sources":["../src/CanvasPrepare.ts"],"sourcesContent":["import { BaseTexture, extensions, ExtensionType, settings } from '@pixi/core';\nimport { BasePrepare } from '@pixi/prepare';\n\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\nimport type { ExtensionMetadata, ICanvas, ICanvasRenderingContext2D, IRenderer, ISystem } from '@pixi/core';\nimport type { IDisplayObjectExtended } from '@pixi/prepare';\n\nconst CANVAS_START_SIZE = 16;\n\n/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n * @private\n * @param prepare - Instance of CanvasPrepare\n * @param item - Item to check\n * @returns If item was uploaded.\n */\nfunction uploadBaseTextures(prepare: IRenderer | BasePrepare, item: IDisplayObjectExtended): boolean\n{\n    const tempPrepare = prepare as CanvasPrepare;\n\n    if (item instanceof BaseTexture)\n    {\n        const image = (item as any).source;\n\n        // Sometimes images (like atlas images) report a size of zero, causing errors on windows phone.\n        // So if the width or height is equal to zero then use the canvas size\n        // Otherwise use whatever is smaller, the image dimensions or the canvas dimensions.\n        const imageWidth = image.width === 0 ? tempPrepare.canvas.width : Math.min(tempPrepare.canvas.width, image.width);\n        const imageHeight = image.height === 0 ? tempPrepare.canvas.height\n            : Math.min(tempPrepare.canvas.height, image.height);\n\n        // Only a small subsections is required to be drawn to have the whole texture uploaded to the GPU\n        // A smaller draw can be faster.\n        tempPrepare.ctx.drawImage(\n            image, 0, 0, imageWidth, imageHeight, 0, 0,\n            tempPrepare.canvas.width, tempPrepare.canvas.height\n        );\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * The prepare manager provides functionality to upload content to the GPU.\n *\n * This cannot be done directly for Canvas like in WebGL, but the effect can be achieved by drawing\n * textures to an offline canvas. This draw call will force the texture to be moved onto the GPU.\n *\n * An instance of this class is automatically created by default, and can be found at `renderer.prepare`\n * @class\n * @extends PIXI.BasePrepare\n * @memberof PIXI\n */\nexport class CanvasPrepare extends BasePrepare implements ISystem\n{\n    /** @ignore */\n    static extension: ExtensionMetadata = {\n        name: 'prepare',\n        type: ExtensionType.CanvasRendererSystem,\n    };\n\n    /**\n     * An offline canvas to render textures to\n     * @internal\n     */\n    canvas: ICanvas;\n    /**\n     * The context to the canvas\n     * @internal\n     */\n    ctx: ICanvasRenderingContext2D;\n\n    /**\n     * @param renderer - A reference to the current renderer\n     */\n    constructor(renderer: CanvasRenderer)\n    {\n        super(renderer);\n\n        this.uploadHookHelper = this;\n\n        this.canvas = settings.ADAPTER.createCanvas(\n            CANVAS_START_SIZE,\n            CANVAS_START_SIZE\n        );\n\n        this.ctx = this.canvas.getContext('2d');\n\n        // Add textures to upload\n        this.registerUploadHook(uploadBaseTextures);\n    }\n\n    /** Destroys the plugin, don't use after this */\n    public destroy(): void\n    {\n        super.destroy();\n        this.ctx = null;\n        this.canvas = null;\n    }\n}\n\nextensions.add(CanvasPrepare);\n"],"names":[],"mappings":";;AAOA,MAAM,oBAAoB;AAS1B,SAAS,mBAAmB,SAAkC,MAC9D;AACI,QAAM,cAAc;AAEpB,MAAI,gBAAgB,aACpB;AACI,UAAM,QAAS,KAAa,QAKtB,aAAa,MAAM,UAAU,IAAI,YAAY,OAAO,QAAQ,KAAK,IAAI,YAAY,OAAO,OAAO,MAAM,KAAK,GAC1G,cAAc,MAAM,WAAW,IAAI,YAAY,OAAO,SACtD,KAAK,IAAI,YAAY,OAAO,QAAQ,MAAM,MAAM;AAItD,WAAA,YAAY,IAAI;AAAA,MACZ;AAAA,MAAO;AAAA,MAAG;AAAA,MAAG;AAAA,MAAY;AAAA,MAAa;AAAA,MAAG;AAAA,MACzC,YAAY,OAAO;AAAA,MAAO,YAAY,OAAO;AAAA,IAG1C,GAAA;AAAA,EACX;AAEO,SAAA;AACX;AAaO,MAAM,sBAAsB,YACnC;AAAA;AAAA;AAAA;AAAA,EAqBI,YAAY,UACZ;AACI,UAAM,QAAQ,GAEd,KAAK,mBAAmB,MAExB,KAAK,SAAS,SAAS,QAAQ;AAAA,MAC3B;AAAA,MACA;AAAA,IACJ,GAEA,KAAK,MAAM,KAAK,OAAO,WAAW,IAAI,GAGtC,KAAK,mBAAmB,kBAAkB;AAAA,EAC9C;AAAA;AAAA,EAGO,UACP;AACI,UAAM,QACN,GAAA,KAAK,MAAM,MACX,KAAK,SAAS;AAAA,EAClB;AACJ;AA9Ca,cAGF,YAA+B;AAAA,EAClC,MAAM;AAAA,EACN,MAAM,cAAc;AACxB;AA0CJ,WAAW,IAAI,aAAa;"}